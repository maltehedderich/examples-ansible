---
- name: Secure Ubuntu VPS Setup
  hosts: all
  become: true
  vars:
    ssh_port: 2222
    username: secureuser
    public_key: ~/.ssh/id_ed25519.pub

  tasks:
    - name: Update and upgrade all packages
      ansible.builtin.apt:
        update_cache: true
        upgrade: dist

    - name: Install essential packages
      ansible.builtin.apt:
        name:
          - ufw
          - fail2ban
          - unattended-upgrades
        state: present

    - name: Configure unattended-upgrades
      ansible.builtin.copy:
        content: |
          Unattended-Upgrade::Allowed-Origins {
              "${distro_id}:${distro_codename}";
              "${distro_id}:${distro_codename}-security";
              "${distro_id}ESMApps:${distro_codename}-apps-security";
              "${distro_id}ESM:${distro_codename}-infra-security";
          };

          Unattended-Upgrade::Package-Blacklist {
          };

          Unattended-Upgrade::AutoFixInterruptedDpkg "true";
          Unattended-Upgrade::MinimalSteps "true";
          Unattended-Upgrade::InstallOnShutdown "false";
          Unattended-Upgrade::Remove-Unused-Dependencies "true";
          Unattended-Upgrade::Automatic-Reboot "false";
        dest: /etc/apt/apt.conf.d/50unattended-upgrades
        mode: '0644'

    - name: Set up UFW
      community.general.ufw:
        rule: allow
        port: '{{ item }}'
      loop:
        - '{{ ssh_port }}'
        - '80'
        - '443'

    - name: Enable UFW
      community.general.ufw:
        state: enabled

    - name: Configure fail2ban
      ansible.builtin.copy:
        content: |
          [sshd]
          enabled = true
          port = {{ ssh_port }}
          filter = sshd
          logpath = /var/log/auth.log
          maxretry = 3
          bantime = 3600
        dest: /etc/fail2ban/jail.local
        mode: '0644'

    - name: Restart fail2ban
      ansible.builtin.service:
        name: fail2ban
        state: restarted

    - name: Create non-root user
      ansible.builtin.user:
        name: '{{ username }}'
        groups: sudo
        shell: /bin/bash
        create_home: true

    - name: Set up SSH key for new user
      ansible.posix.authorized_key:
        user: '{{ username }}'
        key: "{{ lookup('file', public_key) }}"

    - name: Configure SSH
      ansible.builtin.lineinfile:
        path: /etc/ssh/sshd_config
        regexp: '{{ item.regexp }}'
        line: '{{ item.line }}'
      loop:
        - { regexp: '^#?Port', line: 'Port {{ ssh_port }}' }
        - { regexp: '^#?PermitRootLogin', line: 'PermitRootLogin no' }
        - { regexp: '^#?PasswordAuthentication', line: 'PasswordAuthentication no' }
        - { regexp: '^#?X11Forwarding', line: 'X11Forwarding no' }
        - { regexp: '^#?AllowTcpForwarding', line: 'AllowTcpForwarding no' }
        - { regexp: '^#?AllowAgentForwarding', line: 'AllowAgentForwarding no' }
      notify: Restart SSH

  handlers:
    - name: Restart SSH
      ansible.builtin.service:
        name: ssh
        state: restarted
